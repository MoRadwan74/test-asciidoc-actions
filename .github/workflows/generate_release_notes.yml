name: Generate AsciiDoc Release Notes

on:
  workflow_run:
    workflows: [Check Release Notes Updating]
    types: [completed]

env:
  RELEASE_NOTES_PATH: "docs/modules/user-guide/pages/releases"
  CURRENT_RELEASE_NOTES_PATH: "docs/modules/user-guide/pages/releases/current_release_notes.json"
  GENERATED_RELEASE_NOTES_FILE_NAME: "release-*.adoc"

jobs:
  generate_adoc:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.skip-check == 'false' && github.event.workflow_run.outputs.docs-changed == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if current_release_notes.json is updated
        id: check-file-update
        run: |
          echo "## Checking if current_release_notes.json has updates :passport_control:" >> $GITHUB_STEP_SUMMARY
          if git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }} | grep -q $CURRENT_RELEASE_NOTES_PATH; then
            echo "## current_release_notes.json has updates! :white_check_mark:" >> $GITHUB_STEP_SUMMARY
            echo "file_changed=true" >> $GITHUB_ENV
          else
            echo "## current_release_notes.json is NOT updated! Skipping generating $GENERATED_RELEASE_NOTES_FILE_NAME :no_entry:" >> $GITHUB_STEP_SUMMARY
            echo "file_changed=false" >> $GITHUB_ENV

      - name: Set up Python
        if: env.file_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Generate AsciiDoc file
        if: env.file_changed == 'true'
        run: |
          echo "## Start generating $GENERATED_RELEASE_NOTES_FILE_NAME :page_facing_up:" >> $GITHUB_STEP_SUMMARY
          chmod +x generate_release_notes.py
          ./generate_release_notes.py
          echo "## $GENERATED_RELEASE_NOTES_FILE_NAME is generated successfully :white_check_mark: at :file_folder: $RELEASE_NOTES_PATH" >> $GITHUB_STEP_SUMMARY

      - name: Check for changes
        if: env.file_changed == 'true'
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV

      - name: Configure Git & Commit changes
        if: env.file_changed == 'true' && env.changes_detected == 'true'
        run: |
          echo "## Commit new generated $GENERATED_RELEASE_NOTES_FILE_NAME to branch: ${{ github.head_ref }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./docs/releases/release-*.adoc
          git commit -m "Auto-generate release notes [skip ci]"
          git push origin HEAD:${{ github.head_ref }}
          echo "## $GENERATED_RELEASE_NOTES_FILE_NAME is pushed successfully to branch: ${{ github.head_ref }} :white_check_mark:"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
